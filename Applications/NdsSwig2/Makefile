#
#  There exist several targets which are by default empty and which can be 
#  used for execution of your targets. These targets are usually executed 
#  before and after some main targets. They are: 
#
#     .build-pre:              called before 'build' target
#     .build-post:             called after 'build' target
#     .clean-pre:              called before 'clean' target
#     .clean-post:             called after 'clean' target
#     .clobber-pre:            called before 'clobber' target
#     .clobber-post:           called after 'clobber' target
#     .all-pre:                called before 'all' target
#     .all-post:               called after 'all' target
#     .help-pre:               called before 'help' target
#     .help-post:              called after 'help' target
#
#  Targets beginning with '.' are not intended to be called on their own.
#
#  Main targets can be executed directly, and they are:
#  
#     build                    build a specific configuration
#     clean                    remove built files from a configuration
#     clobber                  remove all built files
#     all                      build all configurations
#     help                     print help mesage
#  
#  Targets .build-impl, .clean-impl, .clobber-impl, .all-impl, and
#  .help-impl are implemented in nbproject/makefile-impl.mk.
#
#  Available make variables:
#
#     CND_BASEDIR                base directory for relative paths
#     CND_DISTDIR                default top distribution directory (build artifacts)
#     CND_BUILDDIR               default top build directory (object files, ...)
#     CONF                       name of current configuration
#     CND_PLATFORM_${CONF}       platform name (current configuration)
#     CND_ARTIFACT_DIR_${CONF}   directory of build artifact (current configuration)
#     CND_ARTIFACT_NAME_${CONF}  name of build artifact (current configuration)
#     CND_ARTIFACT_PATH_${CONF}  path to build artifact (current configuration)
#     CND_PACKAGE_DIR_${CONF}    directory of package (current configuration)
#     CND_PACKAGE_NAME_${CONF}   name of package (current configuration)
#     CND_PACKAGE_PATH_${CONF}   path to package (current configuration)
#
# NOCDDL


# Environment 
MKDIR=mkdir
CP=cp
CCADMIN=CCadmin

#these should come from autoconf
JAVAC=/usr/bin/javac
JAR=/usr/bin/jar
SWIG=/usr/bin/swig
SWIG_OPTIONS=-c++ -outcurrentdir

# our source file
SWIG_SOURCE=nds.i

# Swig directories
ABS_BASE=$(abspath .)
SWIG_DIR=$(ABS_BASE)/swig
ABS_SWIG_PATH=$(abspath ${SWIG_DIR})
SWIG_DIST=$(ABS_BASE)/swig/dist

SWIG_JAVA_DIR=$(ABS_BASE)/swig/java
SWIG_JAVA_CLASS_DIR=$(ABS_BASE)/swig/java/class


SWIG_PYTHON_DIR=$(ABS_BASE)/swig/python
SWIG_OCTAVE_DIR=$(ABS_BASE)/swig/octave


# build
build: .build-post

.build-pre:
# Add your pre 'build' code here...
	@echo "running build-pre scripts"
	
.build-post: .build-impl swig 
	@echo "running build-post scripts swigdir is $(ABS_SWIG_PATH) dist files in $(SWIG_DIST)"
	
	
swig: swig-makedirs swig-java swig-python swig-octave
	@echo "==Generate all swig bindings complete"

swig-makedirs:
	@echo "===========================MAKE VARIABLES FOR SWIG========="
	@echo "Create swig directories:"
	@echo "    ABS_BASE: ${ABS_BASE}"
	@echo "    ABS_SWIG_PATH: ${ABS_SWIG_PATH}"
	@echo "    distribution: ${SWIG_DIST}"
	@echo "    Java source:  ${SWIG_JAVA_DIR}"
	@echo "    Java compiled: ${SWIG_JAVA_CLASS_DIR}"
	@echo "==========================================================="
	$(MKDIR) -p $(SWIG_DIR)
	${MKDIR} -p ${SWIG_DIST}
	
swig-java:
# Generate swig bindings
	@echo "Generating Java SWIG bindings into $(SWIG_DIR)"
	${MKDIR} -p ${SWIG_JAVA_DIR}
	${MKDIR} -p ${SWIG_JAVA_CLASS_DIR}
	
	#
	cd ${SWIG_JAVA_DIR} && ${SWIG} ${SWIG_OPTIONS} -java ${ABS_BASE}/${SWIG_SOURCE}
	cd ${SWIG_JAVA_DIR} && ${JAVAC} -d class *.java
	cd ${SWIG_JAVA_CLASS_DIR} && ${JAR} -cf ${SWIG_DIST}/${PROJECTNAME}.jar *.class

swig-python:
	@echo "Generating Python SWIG bindings into $(SWIG_DIR)"
	${MKDIR} -p ${SWIG_PYTHON_DIR}
	cd ${SWIG_PYTHON_DIR} && ${SWIG} ${SWIG_OPTIONS} -python ${ABS_BASE}/${SWIG_SOURCE}

swig-octave:
	@echo "Generating Octave SWIG bindings into $(SWIG_DIR)"
	${MKDIR} -p ${SWIG_OCTAVE_DIR}
	cd ${SWIG_OCTAVE_DIR} && ${SWIG} ${SWIG_OPTIONS} -octave -outdir octave ${ABS_BASE}/${SWIG_SOURCE}


# clean
clean: .clean-post

.clean-pre:
# Add your pre 'clean' code here...

.clean-post: .clean-impl
# Add your post 'clean' code here...
	@echo "Removing all files generated by SWIG"
	@echo "rm -rf $(SWIG_DIR)"
	${RM} -rf $(SWIG_DIR)
	${RM} -rf ${SWIG_DIST}

# clobber
clobber: .clobber-post

.clobber-pre:
# Add your pre 'clobber' code here...

.clobber-post: .clobber-impl
# Add your post 'clobber' code here...


# all
all: .all-post

.all-pre:
# Add your pre 'all' code here...

.all-post: .all-impl
# Add your post 'all' code here...


# build tests
build-tests: .build-tests-post

.build-tests-pre:
# Add your pre 'build-tests' code here...

.build-tests-post: .build-tests-impl
# Add your post 'build-tests' code here...


# run tests
test: .test-post

.test-pre: build-tests
# Add your pre 'test' code here...

.test-post: .test-impl
# Add your post 'test' code here...


# help
help: .help-post

.help-pre:
# Add your pre 'help' code here...

.help-post: .help-impl
# Add your post 'help' code here...



# include project implementation makefile
include nbproject/Makefile-impl.mk

# include project make variables
include nbproject/Makefile-variables.mk
